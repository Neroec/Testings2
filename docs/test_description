Модуль save -- сохраняет текст в файл

Метод save_positive

Тест №1
Цель: проверить правильно ли функция сохраняет текст
Тип: позитивный
Входные данные: txt, filename - любая структура текста и имя файла
Ожидаемый результат: получен файл с правильно сохранённым текстом

Метод save_negative

Тест №1
Цель: проверить правильно ли функция ведёт себя при отсутствии строк
Тип: негативный
Входные данные: txt, filename - любая структура текста и имя файла
Ожидаемый результат: получен пустой файл

Модуль showodd -- реализует команду вывода хранимого текста на экран, опуская чётные строки

Метод showodd_positive

Тест №1
Цель: проверить правильно ли функция выводит текст на экран при нечётном количестве строк
Тип: позитивный
Входные данные: txt - любая структура текста
Ожидаемый результат: получен файл с правильно выведенным текстом

Тест №2
Цель: проверить правильно ли функция выводит текст на экран при чётном количестве строк
Тип: позитивный
Входные данные: txt - любая структура текста
Ожидаемый результат: получен файл с правильно выведенным текстом

Метод showodd_negative

Тест №1
Цель: проверить правильно ли функция ведёт себя при отсутствии строк
Тип: негативный
Входные данные: txt - любая структура текста
Ожидаемый результат: получен пустой файл

Модуль m -- перемещает курсор в новую позицию

Метод m_positive

Тест №1
Цель: проверить правильно ли перемещается курсор с аргументами в правильном диапазоне
Тип: позитивный
Входные данные: txt, 1, 4 - любая структура текста и удовлетворяющие границы аргументы
Ожидаемый результат: функция вернёт 0, т.е. она завершилась без ошибок 
	txt->cursor->line будет указывать на строку с номером 1,
	txt->cursor->position = 4, т.е. курсор переместится на 4 позицию в строке
	
Метод m_negative

Тест №1
Цель: проверить правильно ли перемещается курсор со вторым аргументом меньше границы
Тип: негативный
Входные данные: txt, -1, 0 - любая структура текста и удовлетворяющий цель второй аргумент
Ожидаемый результат: функция вернёт 1, т.е. второй аргумент меньше границы

Тест №2
Цель: проверить правильно ли перемещается курсор со вторым аргументом больше границы
Тип: негативный
Входные данные: txt, 1, 0 - любая структура текста и удовлетворяющий цель второй аргумент
Ожидаемый результат: функция вернёт 2, т.е. второй аргумент больше границы

Тест №3
Цель: проверить правильно ли перемещается курсор с третьим аргументом меньше границы
Тип: негативный
Входные данные: txt, 0, -1 - любая структура текста и удовлетворяющий цель третий аргумент
Ожидаемый результат: функция вернёт 3, т.е. третий аргумент меньше границы

Тест №4
Цель: проверить правильно ли перемещается курсор с третьим аргументом больше границы
Тип: негативный
Входные данные: txt, 0, 7 - любая структура текста и удовлетворяющий цель третий аргумент
Ожидаемый результат: функция вернёт 4, т.е. третий аргумент больше границы

Тест №5
Цель: проверить правильно ли ведёт себя функция при отсутствие строк
Тип: негативный
Входные данные: txt, 0, 0 - любая структура текста и удовлетворяющие цель аргументы
Ожидаемый результат: функция вернёт 5, т.е. в тексте отсутствую строки

Тест №6
Цель: проверить правильно ли ведёт себя функция при пустой строке с '\0'
Тип: негативный
Входные данные: txt, 0, 0 - любая структура текста и удовлетворяющие цель аргументы
Ожидаемый результат: функция вернёт 6, т.е. в строке нет позиции для курсора

Тест №7
Цель: проверить правильно ли ведёт себя функция при пустой строке с '\n'
Тип: негативный
Входные данные: txt, 0, 0 - любая структура текста и удовлетворяющие цель аргументы
Ожидаемый результат: функция вернёт 0, т.е. она завершится без ошибок
	  txt->cursor->position = 0, т.е. курсор переместится в начало строки

Модуль mp -- перемещает курсор в новую позицию в текущей строке

Метод mp_positive

Тест №1
Цель: проверить правильно ли перемещается курсор с аргументами в правильном диапазоне
Тип: позитивный
Входные данные: txt, 3 - любая структура текста и удовлетворяющий границы аргумент
Ожидаемый результат: функция вернёт 0, т.е. она завершилась без ошибок 
	txt->cursor->position = 3, т.е. курсор переместится на 3 позицию в строке

Метод mp_negative

Тест №1
Цель: проверить правильно ли перемещается курсор со вторым аргументом меньше границы
Тип: негативный
Входные данные: txt, -1 - любая структура текста и удовлетворяющий границы аргумент
Ожидаемый результат: функция вернёт 1, т.е. второй аргумент меньше границы

Тест №2
Цель: проверить правильно ли перемещается курсор со вторым аргументом больше границы
Тип: негативный
Входные данные: txt, 7 - любая структура текста и удовлетворяющий границы аргумент
Ожидаемый результат: функция вернёт 2, т.е. второй аргумент больше границы

Тест №3
Цель: проверить правильно ли ведёт себя функция при отсутствие строк
Тип: негативный
Входные данные: txt, 0 - любая структура текста и удовлетворяющий цель аргумент
Ожидаемый результат: функция вернёт 3, т.е. в тексте отсутствую строки

Тест №4
Цель: проверить правильно ли ведёт себя функция при пустой строке с '\0'
Тип: негативный
Входные данные: txt, 0 - любая структура текста и удовлетворяющий цель аргумент
Ожидаемый результат: функция вернёт 4, т.е. в строке нет позиции для курсора

Тест №5
Цель: проверить правильно ли ведёт себя функция при пустой строке с '\n'
Тип: негативный
Входные данные: txt, 0, 0 - любая структура текста и удовлетворяющий цель аргумент
Ожидаемый результат: функция вернёт 0, т.е. она завершится без ошибок
	  txt->cursor->position = 0, т.е. курсор переместится в начало строки

Модуль j -- объединяет строку с курсором со следующей

Метод j_positive

Тест №1
Цель: проверить правильно ли изменяется структура текста когда следующая строка - конец текста
Тип: позитивный
Входные данные: txt - любая структура текста удовлетворяющая цель
Ожидаемый результат: функция вернёт 0, т.е. она завершилась без ошибок,
	следующая строка приклеится через пробел к текущей
	указатель текущей строки на следующую строку станет NULL
	txt->end = текущей строке, т.е. текущая строка станет концом текста
	
Тест №2
Цель: проверить правильно ли изменяется структура текста когда следующая строка не конец текста
Тип: позитивный
Входные данные: txt - любая структура текста удовлетворяющая цель
Ожидаемый результат: функция вернёт 0, т.е. она завершилась без ошибок,
	следующая строка приклеится через пробел к текущей
	указатель текущей строки на следующую строку станет указывать на позаследующую строку
	указатель позаследующей строки на предыдущую станет указывать на текущую строку
	
Метод j_negative

Тест №1
Цель: проверить правильно ли изменяется структура текста когда текущая строка - конец текста
Тип: негативный
Входные данные: txt - любая структура текста удовлетворяющая цель
Ожидаемый результат: функция вернёт 1, т.е. текущая строка будет концом текста

Тест №2
Цель: проверить правильно ли ведёт себя функция при отсутствии строк
Тип: негативный
Входные данные: txt - любая структура текста удовлетворяющая цель
Ожидаемый результат: функция вернёт 2, т.е. в тексте нету строк

Тест №3
Цель: проверить правильно ли ведёт себя функция при отсутствии строк
Тип: негативный
Входные данные: txt - любая структура текста удовлетворяющая цель
Ожидаемый результат: функция вернёт 3, т.е. курсор никуда не указывает
